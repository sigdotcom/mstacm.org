{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Badge from \"./Badge\";\nexport default function TabBarIcon(_ref) {\n  var horizontal = _ref.horizontal,\n      badge = _ref.badge,\n      activeOpacity = _ref.activeOpacity,\n      inactiveOpacity = _ref.inactiveOpacity,\n      activeTintColor = _ref.activeTintColor,\n      inactiveTintColor = _ref.inactiveTintColor,\n      renderIcon = _ref.renderIcon,\n      style = _ref.style;\n  var size = 25;\n  return React.createElement(View, {\n    style: [horizontal ? styles.iconHorizontal : styles.iconVertical, style]\n  }, React.createElement(View, {\n    style: [styles.icon, {\n      opacity: activeOpacity\n    }]\n  }, renderIcon({\n    focused: true,\n    size: size,\n    color: activeTintColor\n  })), React.createElement(View, {\n    style: [styles.icon, {\n      opacity: inactiveOpacity\n    }]\n  }, renderIcon({\n    focused: false,\n    size: size,\n    color: inactiveTintColor\n  })), React.createElement(Badge, {\n    visible: badge != null,\n    style: [styles.badge, horizontal ? styles.badgeHorizontal : styles.badgeVertical],\n    size: size * 3 / 4\n  }, badge));\n}\nvar styles = StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 25\n  },\n  iconVertical: {\n    flex: 1\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3\n  },\n  badge: {\n    position: 'absolute',\n    left: 3\n  },\n  badgeVertical: {\n    top: 3\n  },\n  badgeHorizontal: {\n    top: 7\n  }\n});","map":{"version":3,"sources":["TabBarIcon.tsx"],"names":["style","size","horizontal","styles","opacity","activeOpacity","renderIcon","focused","color","activeTintColor","inactiveOpacity","inactiveTintColor","badge","icon","position","alignSelf","alignItems","justifyContent","height","width","minWidth","iconVertical","flex","iconHorizontal","marginTop","left","badgeVertical","top","badgeHorizontal"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;;;AAGA,OAAA,KAAA;AAkBA,eAAe,SAAA,UAAA,OASL;AAAA,MATyB,UASzB,QATyB,UASzB;AAAA,MATyB,KASzB,QATyB,KASzB;AAAA,MATyB,aASzB,QATyB,aASzB;AAAA,MATyB,eASzB,QATyB,eASzB;AAAA,MATyB,eASzB,QATyB,eASzB;AAAA,MATyB,iBASzB,QATyB,iBASzB;AAAA,MATyB,UASzB,QATyB,UASzB;AAAA,MADRA,KACQ,QADRA,KACQ;AACR,MAAMC,IAAI,GADF,EACR;AAIA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CAACC,UAAU,GAAGC,MAAM,CAAT,cAAA,GAA2BA,MAAM,CAA5C,YAAA,EAAA,KAAA;AADT,GAAA,EAGE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAACA,MAAM,CAAP,IAAA,EAAc;AAAEC,MAAAA,OAAO,EAAEC;AAAX,KAAd;AAAb,GAAA,EACGC,UAAU,CAAC;AACVC,IAAAA,OAAO,EADG,IAAA;AAEVN,IAAAA,IAFU,EAEVA,IAFU;AAGVO,IAAAA,KAAK,EAAEC;AAHG,GAAD,CADb,CAHF,EAUE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAACN,MAAM,CAAP,IAAA,EAAc;AAAEC,MAAAA,OAAO,EAAEM;AAAX,KAAd;AAAb,GAAA,EACGJ,UAAU,CAAC;AACVC,IAAAA,OAAO,EADG,KAAA;AAEVN,IAAAA,IAFU,EAEVA,IAFU;AAGVO,IAAAA,KAAK,EAAEG;AAHG,GAAD,CADb,CAVF,EAiBE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,OAAO,EAAEC,KAAK,IADhB,IAAA;AAEE,IAAA,KAAK,EAAE,CACLT,MAAM,CADD,KAAA,EAELD,UAAU,GAAGC,MAAM,CAAT,eAAA,GAA4BA,MAAM,CAJhD,aAES,CAFT;AAME,IAAA,IAAI,EAAGF,IAAI,GAAL,CAACA,GAAY;AANrB,GAAA,EAlBJ,KAkBI,CAjBF,CADF;AA8BD;AAED,IAAME,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BU,EAAAA,IAAI,EAAE;AAIJC,IAAAA,QAAQ,EAJJ,UAAA;AAKJC,IAAAA,SAAS,EALL,QAAA;AAMJC,IAAAA,UAAU,EANN,QAAA;AAOJC,IAAAA,cAAc,EAPV,QAAA;AAQJC,IAAAA,MAAM,EARF,MAAA;AASJC,IAAAA,KAAK,EATD,MAAA;AAWJC,IAAAA,QAAQ,EAAE;AAXN,GADyB;AAc/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM,GAdiB;AAiB/BC,EAAAA,cAAc,EAAE;AACdL,IAAAA,MAAM,EADQ,MAAA;AAEdM,IAAAA,SAAS,EAAE;AAFG,GAjBe;AAqB/BZ,EAAAA,KAAK,EAAE;AACLE,IAAAA,QAAQ,EADH,UAAA;AAELW,IAAAA,IAAI,EAAE;AAFD,GArBwB;AAyB/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,GAAG,EAAE;AADQ,GAzBgB;AA4B/BC,EAAAA,eAAe,EAAE;AACfD,IAAAA,GAAG,EAAE;AADU;AA5Bc,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport type { Route } from '@react-navigation/native';\nimport Badge from './Badge';\n\ntype Props = {\n  route: Route<string>;\n  horizontal: boolean;\n  badge?: string | number;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor: string;\n  inactiveTintColor: string;\n  renderIcon: (props: {\n    focused: boolean;\n    color: string;\n    size: number;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default function TabBarIcon({\n  horizontal,\n  badge,\n  activeOpacity,\n  inactiveOpacity,\n  activeTintColor,\n  inactiveTintColor,\n  renderIcon,\n  style,\n}: Props) {\n  const size = 25;\n\n  // We render the icon twice at the same position on top of each other:\n  // active and inactive one, so we can fade between them.\n  return (\n    <View\n      style={[horizontal ? styles.iconHorizontal : styles.iconVertical, style]}\n    >\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\n        {renderIcon({\n          focused: true,\n          size,\n          color: activeTintColor,\n        })}\n      </View>\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\n        {renderIcon({\n          focused: false,\n          size,\n          color: inactiveTintColor,\n        })}\n      </View>\n      <Badge\n        visible={badge != null}\n        style={[\n          styles.badge,\n          horizontal ? styles.badgeHorizontal : styles.badgeVertical,\n        ]}\n        size={(size * 3) / 4}\n      >\n        {badge}\n      </Badge>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n  iconVertical: {\n    flex: 1,\n  },\n  iconHorizontal: {\n    height: '100%',\n    marginTop: 3,\n  },\n  badge: {\n    position: 'absolute',\n    left: 3,\n  },\n  badgeVertical: {\n    top: 3,\n  },\n  badgeHorizontal: {\n    top: 7,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}