{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { CommonActions } from '@react-navigation/routers';\nimport NavigationContext from \"./NavigationContext\";\nimport UnhandledActionContext from \"./UnhandledActionContext\";\nimport { PrivateValueStore } from \"./types\";\nPrivateValueStore;\nexport default function useNavigationHelpers(_ref) {\n  var onAction = _ref.onAction,\n      getState = _ref.getState,\n      emitter = _ref.emitter,\n      router = _ref.router;\n  var onUnhandledAction = React.useContext(UnhandledActionContext);\n  var parentNavigationHelpers = React.useContext(NavigationContext);\n  return React.useMemo(function () {\n    var dispatch = function dispatch(op) {\n      var action = typeof op === 'function' ? op(getState()) : op;\n      var handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n\n    var actions = _objectSpread(_objectSpread({}, router.actionCreators), CommonActions);\n\n    var helpers = Object.keys(actions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(actions[name].apply(actions, arguments));\n      };\n\n      return acc;\n    }, {});\n    return _objectSpread(_objectSpread(_objectSpread({}, parentNavigationHelpers), helpers), {}, {\n      dispatch: dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : function () {\n        return true;\n      },\n      canGoBack: function canGoBack() {\n        var state = getState();\n        return router.getStateForAction(state, CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      dangerouslyGetParent: function dangerouslyGetParent() {\n        return parentNavigationHelpers;\n      },\n      dangerouslyGetState: getState\n    });\n  }, [emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}","map":{"version":3,"sources":["useNavigationHelpers.tsx"],"names":["PrivateValueStore","router","onUnhandledAction","React","parentNavigationHelpers","dispatch","op","action","getState","handled","onAction","actions","CommonActions","helpers","acc","emit","emitter","isFocused","canGoBack","state","routeNames","routeParamList","dangerouslyGetParent","dangerouslyGetState"],"mappings":";;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,aAAA,QAAA,2BAAA;AAOA,OAAA,iBAAA;AACA,OAAA,sBAAA;AAEA,SAAA,iBAAA;AAIAA,iBAAiB;AAgBjB,eAAe,SAAA,oBAAA,OAIoD;AAAA,MAAjE,QAAiE,QAAjE,QAAiE;AAAA,MAAjE,QAAiE,QAAjE,QAAiE;AAAA,MAAjE,OAAiE,QAAjE,OAAiE;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AACjE,MAAMC,iBAAiB,GAAGC,KAAK,CAALA,UAAAA,CAA1B,sBAA0BA,CAA1B;AACA,MAAMC,uBAAuB,GAAGD,KAAK,CAALA,UAAAA,CAAhC,iBAAgCA,CAAhC;AAEA,SAAO,KAAK,CAAL,OAAA,CAAc,YAAM;AACzB,QAAME,QAAQ,GAAIC,SAAZD,QAAYC,CAAAA,EAAD,EAA6C;AAC5D,UAAMC,MAAM,GAAG,OAAA,EAAA,KAAA,UAAA,GAA2BD,EAAE,CAACE,QAA9B,EAA6B,CAA7B,GAAf,EAAA;AAEA,UAAMC,OAAO,GAAGC,QAAQ,CAAxB,MAAwB,CAAxB;;AAEA,UAAI,CAAJ,OAAA,EAAc;AACZR,QAAAA,iBAAiB,KAAjBA,IAAAA,IAAAA,iBAAiB,KAAA,KAAjBA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAiB,CAAjBA,MAAiB,CAAjBA;AACD;AAPH,KAAA;;AAUA,QAAMS,OAAO,mCACRV,MAAM,CADK,cAAH,GAERW,aAFQ,CAAb;;AAKA,QAAMC,OAAO,GAAG,MAAM,CAAN,IAAA,CAAA,OAAA,EAAA,MAAA,CACd,UAAA,GAAA,EAAA,IAAA,EAAe;AAEbC,MAAAA,GAAG,CAAHA,IAAG,CAAHA,GAAY;AAAA,eAAkBT,QAAQ,CAACM,OAAO,CAA9CG,IAA8C,CAAPH,OAAAA,OAAO,YAAR,CAA1B;AAAA,OAAZG;;AACA,aAAA,GAAA;AAJY,KAAA,EAAhB,EAAgB,CAAhB;AASA,yDAAO,uBAAP,GAAO,OAAP;AAGET,MAAAA,QAHK,EAGLA,QAHF;AAIEU,MAAAA,IAAI,EAAEC,OAAO,CAJR,IAAP;AAKEC,MAAAA,SAAS,EAAEb,uBAAuB,GAC9BA,uBAAuB,CADO,SAAA,GAE9B;AAAA,eAPC,IAOD;AAAA,OAPN;AAQEc,MAAAA,SAAS,EAAE,qBAAM;AACf,YAAMC,KAAK,GAAGX,QAAd,EAAA;AAEA,eACE,MAAM,CAAN,iBAAA,CAAA,KAAA,EAAgCI,aAAa,CAA7C,MAAgCA,EAAhC,EAAkE;AAChEQ,UAAAA,UAAU,EAAED,KAAK,CAD+C,UAAA;AAEhEE,UAAAA,cAAc,EAAE;AAFgD,SAAlE,MAAA,IAAA,KAIAjB,uBAJA,KAAA,IAIAA,IAAAA,uBAJA,KAAA,KAAA,CAIAA,GAJA,KAAA,CAIAA,GAAAA,uBAAuB,CAJvB,SAIAA,EAJA,KADF,KAAA;AAXG,OAAP;AAoBEkB,MAAAA,oBAAoB,EAAE;AAAA,eApBjB,uBAoBiB;AAAA,OApBxB;AAqBEC,MAAAA,mBAAmB,EAAEf;AArBvB;AAzBK,GAAA,EAiDJ,CACDQ,OAAO,CADN,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,uBAAA,EAjDH,MAiDG,CAjDI,CAAP;AAyDD","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport NavigationContext from './NavigationContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { NavigationHelpers, NavigationProp, PrivateValueStore } from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-expect-error: name is a valid key, but TypeScript is dumb\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      dangerouslyGetParent: () => parentNavigationHelpers as any,\n      dangerouslyGetState: getState,\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined);\n  }, [\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}