# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  frontend-tests:
    docker:
      # specify the version you desire here
      - image: circleci/node:lts

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/mstacm.org

    steps:
      - checkout:
          path: ~/mstacm.org

      # Download and cache dependencies
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # run tests!
      - run: CI=true yarn lerna run test

  backend-tests:
    docker:
      # specify the version you desire here
      - image: circleci/node:lts

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/mstacm.org/apps/api

    steps:
      - checkout:
          path: ~/mstacm.org

      # Download and cache dependencies
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # run tests!
      - run: CI=true yarn test --passWithNoTests

# TODO: when we have access to a production machine with SSH access
#   deploy:
#     machine:
#       enabled: true
# 	working_directory: ~/mstacm.org/apps/web
#     steps:
#       - run:
#           name: Deploy Over SSH
#           command: |
#             ssh $SSH_USER@$SSH_HOST "cd /opt/mstacm.org/api && git pull && bash deploy.sh"
#             workflows:
workflows:
  version: 2
  build-and-test:
    jobs:
      - frontend-tests
      - backend-tests
