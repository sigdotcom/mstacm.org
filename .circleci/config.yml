# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: acmweb/api
    docker:
      - image: circleci/buildpack-deps:stable
  docker-node:
    docker:
      - image: circleci/node:12
  python:
    docker:
      - image: circleci/python:3.7.3
    
jobs:
  frontend-tests:
    executor: docker-node
    working_directory: ~/mstacm.org

    steps:
      - checkout:
          path: ~/mstacm.org

      # Download and cache dependencies
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # run tests!
      - run: 
          name: Run tests
          command: CI=true yarn lerna run test

  backend-tests:
    executor: docker-node
    working_directory: ~/mstacm.org/apps/api

    steps:
      - checkout:
          path: ~/mstacm.org

      # Download and cache dependencies
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      # run tests!
      - run: 
          name: Run tests
          command: CI=true yarn test --passWithNoTests

  ansible-lint:
    executor: python
    working_directory: ~/mstacm.org/deploy

    steps:
      - checkout:
          path: ~/mstacm.org
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          keys:
            - pipenv-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pipenv-packages-v1-{{ .Branch }}-
            - pipenv-packages-v1-
      - run:
          name: Install deploy dependencies
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: pipenv-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages" 
      - run:
          name: Lint the ansible file
          command: pipenv run ansible-lint -x 403,701 site.yml

  build-api-docker:
    executor: docker-publisher
    working_directory: ~/mstacm.org/apps/api

    steps:
      - checkout:
          path: ~/mstacm.org
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG

  publish-tag:
    executor: docker-publisher

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
  deploy:
    executor: python
    working_directory: ~/mstacm.org/deploy

    steps:
      - checkout:
          path: ~/mstacm.org
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          keys:
            - pipenv-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pipenv-packages-v1-{{ .Branch }}-
            - pipenv-packages-v1-
      - run:
          name: Install deploy dependencies
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: pipenv-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      # Can be found https://circleci.com/gh/sigdotcom/mstacm.org/edit#ssh
      - add_ssh_keys:
          fingerprints:
            - "4c:d5:a2:76:db:83:ee:67:76:0b:bd:d6:dc:bc:65:db"
      - run:
          name: Add ansible vault password
          command: echo "$ANSIBLE_VAULT_PASSWORD" > ~/.vault_pass.txt
      - run:
          name: Deploy with ansible
          command: pipenv run ansible-playbook -i production site.yml --vault-password-file ~/.vault_pass.txt
      - run:
          name: Remove vault password
          command: rm ~/.vault_pass.txt
        
workflows:
  version: 2
  build-test-publish-and-deploy:
    jobs:
      - frontend-tests
      - backend-tests
      - ansible-lint
      - build-api-docker:
          requires:
            - frontend-tests
            - backend-tests
      - publish-latest:
          # Found at https://circleci.com/gh/organizations/sigdotcom/settings#contexts
          context: mstacm-docker
          requires:
            - build-api-docker
          filters:
            branches:
              only: master
      - publish-tag:
          # Found at https://circleci.com/gh/organizations/sigdotcom/settings#contexts
          context: mstacm-docker
          requires:
            - build-api-docker
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deployment-hold:
          type: approval
          requires:
            - publish-latest
            - ansible-lint
      - deploy:
          # Found at https://circleci.com/gh/organizations/sigdotcom/settings#contexts
          context: mstacm-ansible
          requires:
            - deployment-hold
          filters:
            branches:
              only: master

